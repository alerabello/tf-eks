name: Terraform Deploy - Developer

on:
  push:
    branches:
      - develop
  workflow_dispatch: # permite o disparo manual do workflow
    inputs:
      action:
        description: 'Action to perform: apply or destroy'
        required: true
        default: 'apply'

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: develop

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV
    
    - name: Install TFLint
      run: |
        curl -L https://github.com/terraform-linters/tflint/releases/latest/download/tflint_linux_amd64.zip -o tflint.zip
        unzip tflint.zip
        sudo mv tflint /usr/local/bin/
        rm tflint.zip
  
    - name: Lint Terraform files
      run: tflint

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.0

    - name: Format Terraform files
      run: terraform fmt
    
    - name: Initialize Terraform
      run: terraform init -reconfigure
      
    - name: Plan Terraform changes
      run: terraform plan -out=tfplan

    - name: Save Terraform plan
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: tfplan

    # Configuração de cache
    - name: Cache Terraform files
      uses: actions/cache@v2
      with:
        path: |
          .terraform
          .terraform.lock.hcl
        key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}

  apply:
    runs-on: ubuntu-latest
    needs: terraform
    environment: develop
    if: github.event.inputs.action == 'apply' || github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.0

    - name: Download Terraform plan
      uses: actions/download-artifact@v2
      with:
        name: tfplan
        path: ./tfplan

    - name: Move Terraform plan
      run: mv ./tfplan/tfplan ./tfplan.tfplan

    - name: Initialize Terraform
      run: terraform init -reconfigure

    - name: Apply Terraform changes
      run: terraform apply -auto-approve ./tfplan.tfplan

  destroy:
    runs-on: ubuntu-latest
    environment: develop
    if: github.event.inputs.action == 'destroy'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.8.0

    - name: Initialize Terraform
      run: terraform init -reconfigure

    - name: Destroy Terraform resources
      run: terraform destroy -auto-approve
